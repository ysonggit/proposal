%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%   A Beamer presentation by Rodrigo Platte, Arizona State University, May 18 2007.
%   Feel free to modify this file to generate your own presentation.
%
%   This Latex file should be compiled with pdflatex, for this reason, it is recommended
% that you convert the figures in your presentation to pdf. Postscript files (.ps and .eps)
% will not compile properly when pdflatex is used. You may use commands like "convert"
% or "eps2pdf" (in linux) to convert your figures.
%
%   The final output is a PDF file that is best visualized with Adobe Reader.
%
%   More information can be found in beameruserguide.pdf
%
%   This presentation requires the following files:
%   BEAMERoptions.tex, ASUlogo.pdf,  asu.pdf, beamerouterthememathASUlogo.sty
%  intro1.pdf, intro2.pdf, intro3.pdf, intro4.pdf, analytic.pdf
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\documentclass[compress]{beamer}
% Use this instead for printing and distributing your slides (suppresses overlays)
%\documentclass[handout]{beamer}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Edit the file BEAMERoptions.tex to change theme, color, fonts, logo, etc.%
\input{BEAMERoptions.tex}					                                         %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Load packages
%%%%%%%%%%%%%%%%%%%%%
\usepackage[english]{babel}
\usepackage{graphics}
\usepackage{multimedia} % for movies and sound
\usepackage{times}
\usepackage{hyperref}
\usepackage{listings}
\lstset{breaklines=true, flexiblecolumns=true} % Auto line break
\lstset{extendedchars=false, float=htb}
\lstset{basicstyle=\small, xrightmargin=2em, xleftmargin=2em}
%%%%%%%%%%%%%%%%%%%%%


%% The title and name
%% Note: [short title]{long title}, [short author(s) name]{long author(s) name}
\title[]{Comparison of Constrained Geometric Approximation Strategies
for Planar Information States}
\author[Yang Song, Jason O'Kane]{\emph{\textbf{Yang Song}, Jason M. O'Kane\\
\textbf{Email}: song24 at email.sc.edu\\
        jokane at cse.sc.edu } }
\date[]{}
% Show USC logo in title page
%%%%%%%%%%%%%%%%%%%%%%
\institute[Computer Science and Engineering]{
\includegraphics[height=1.2cm]{usc_logo.pdf} \\
}
%%%%%%%%%%%%%%%%%%%%%



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%% Presentation Starts Here %%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{document}

%%% Title frame %%%%%
\begin{frame}[plain]
	\titlepage
	\transboxout
\end{frame}

%%%% Outline (optional) %%%%%%%%%%%%%%%%%%%%%
%% The outline depends on \section and \subsection commands
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%\begin{frame}
%  \frametitle{Learning Objectives}
%  \tableofcontents[pausesections]
%  \transboxin
%\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\section[Problem Statement]{Problem Statement}

\begin{frame}[containsverbatim] \frametitle{Problem Statement}

\begin{columns}
\column{.65\textwidth}
    \begin{itemize}
    \item \textbf{Goal}:\\
    For the simple robot with:
    \begin{itemize} 
    \item computation limitations
    \item moving uncertainties
    \item sensing limitations
    \end{itemize}
    represent and reason about uncertainty in its own states efficiently.\\

    \item \textbf{Intuition}:\\
    Accelerate time-consuming operations by maintaining only an \textcolor[rgb]{1.00,0.00,0.00}{overapproximation} of the true
    \emph{I-state}, and constraining this approximation
    to have a simple geometric form.\\
    \end{itemize}
\column{.35\textwidth}
    %\textbf{Result}:\\
%    The robot can fulfill the navigation task even with poor approximation of the true \emph{I-state}.
    \begin{figure}
    \includegraphics[scale=0.27]{srvq.jpg}
    \caption{SRV-1 Surveyor Robot}
    \end{figure}
\end{columns}


\transboxout
\end{frame}

\begin{frame}\frametitle{States}
\begin{itemize}
\item[] For a robot whose current state is $x_k \in X$ at stage $k$, 

\item[] we can update its state using a transition function $F(x_k, u_k)$ by applying its current action $u_k$.

\item[] Consider the moving uncertainty $\theta_k$, we can roughly range the possible state at stage $k+1$
\end{itemize}
\begin{figure}
    \includegraphics[scale=0.27]{istate.jpg}
    \end{figure}


\transboxin
\end{frame}

\begin{frame}\frametitle{Information States}
Assume that current real state of the robot could not be observed directly. \\

The robot could maintain a set of possible states, which is \emph{I-state} $\eta_k$,
 to make its decisions.
 
 \begin{figure}
    \includegraphics[scale=0.3]{xk.jpg}
    \caption{$\eta_k$ : contains all possible states at stage $k$}
    \end{figure}
%
%
%\begin{itemize}
%\item A set-valued \emph{state transition function} $F: X \times U \to X$ \\
%    $F(x_k, u_k) = \left\{x_k + u_k + \theta_k \mid \theta_k \in \Theta(u_k)\right\} \cap X_{free}$\\
%    where $\Theta(u_k)$ denotes a bounded set of possible noise values, which
%	may depend on the action the robot selects.
%
%\item A set-valued \emph{observation function} $h: X \to Y$\\
%    $H(y_k) = \left\{ x_k \in X \mid y_k \in h(x_k), y_k \in Y \right\}$
%\end{itemize}

\transboxin
\end{frame}

\begin{frame}\frametitle{Set Transition Function}
Assume that current real state of the robot could not be observed directly. \\

The robot could maintain a set of possible states, which is \emph{I-state} $\eta_k$,
 to make its decisions.

 \begin{figure}
    \includegraphics[scale=0.3]{xk_u.jpg}
    \caption{For each $x_k \in \eta_k$, applying set-valued transition function $F$ yields $\bigcup_{x_k \in \eta_k} F(x_k, u_k)$ }
    \end{figure}

\transboxin
\end{frame}

\begin{frame}\frametitle{Set Observation Function}
\begin{columns}
\column{.6\textwidth}
\begin{itemize}
\item Assume the observation preimage $H(y_k) \in X$ derived from the observation function $h: X \to Y$,
is a planar disk, where $y_k \in Y$ is the observation. \\

\item The \emph{I-state} could be updated by intersecting transited set of possible states with the 
observation preimage:\\
\begin{equation}\label{eq:itrans}
		\eta_{k+1} =
		 \left[ \bigcup_{x_k \in \eta_k} F(x_k, u_k) \right]
		\cap H(y_k).
	\end{equation}
\end{itemize}
\column{.4\textwidth}
 \begin{figure}
    \includegraphics[scale=0.25]{xk_intersect.jpg}
    \caption{The green region is updated \emph{I-state} $\eta_{k+1}$}
    \end{figure}
\end{columns}
\transboxin
\end{frame}

\begin{frame}\frametitle{Prior Work}
\begin{itemize}
\item[] Prior research done by (B. Tovar and S. M. LaValle) and (J. van den Berg, P. Abbeel, and K. Goldberg) 
used probabilistic representations for planning\\

\item[] Prior work by the authors (J.O'Kane, 08,09,11) has used preliminary versions of the constrained geometric approximation method using specific, fixed range spaces. \\
\end{itemize}
New contributions
\begin{enumerate}
\item A careful formulation of the operations in the range space $\mathcal{R}$.
\item Algorithms for double-rectangle range space $\mathcal{R}_{drect}$.
\item A series of experiments for effectiveness comparison of different range spaces.
\end{enumerate}
\transboxin
\end{frame}

\section[CGA Algorithm]{CGA Algorithm}
\begin{frame} \frametitle{Range Space}
\begin{definition}{\textbf{Range Space $\mathcal{R}$} :}
 $\mathcal{R} \subseteq \mathcal{I}$ is a set of I-states, it contains
 approximation of \emph{I-states}, $A(\eta_k) \in \mathcal{R}$
\end{definition}
    \begin{figure}
    \includegraphics[scale=0.3]{circlerect.jpg}
    \end{figure}


\transboxout
\end{frame}


\begin{frame} \frametitle{Compute Approximate Action Update Function}
\begin{enumerate}
		\item An \emph{approximate action update function} $T: \mathcal{R} \times U \to
		\mathcal{R}$, such that if $\eta_k \subseteq A_k$, then
			\begin{equation}\label{eq:T}
		 		\bigcup_{x_k \in \eta_k} F(x_k, u_k) \subseteq T(A_k, u_k).
			\end{equation}

		\item An \emph{approximate observation update function} $O: \mathcal{R} \times
		Y \to \mathcal{R}$, such that if $\eta_k \subseteq A_k$, then
			\begin{equation}
				\eta_k \cap H(y_k) \subseteq O(A_k, u_k).
			\end{equation}
	\end{enumerate}

\begin{definition}{\textbf{$AABB(S)$} :}
    For any compact set $S \subset \mathbb{R}^2$, let $AABB(S)$
	denote the its smallest	``axis-aligned bounding box.''
\end{definition}



\transboxout
\end{frame}

\begin{frame} \frametitle{}
In the rectangle range space, computing approximate transition function $T_{rect}$ is shown in below steps:\\
\begin{equation}\label{eq:trect}
		T_{rect}(A_k, u_k) = AABB(X_{free} \cap [A_k  \oplus \{ u_k \} \oplus AABB(\Theta(u_k))])
	\end{equation}
\begin{figure}
    \includegraphics[scale=0.25]{step12.jpg}
    %\caption{1. Compute $AABB(\Theta(u_k))$, $\Theta(u_k)$ is represented by a list of vertices on its boundary, this
	%requires simply selecting the extremal coordinates in each direction from
	%this vertex list. 2. Compute the Minkowski sum $A_k \oplus \{ u_k \} \oplus
	%AABB(\Theta(u_k))$.  }
\end{figure}
\begin{figure}
    \includegraphics[scale=0.25]{step34.jpg}
    %\caption{3. intersect the result of 2 with $X_{free}$ using standard geometric algorithms for boolean operations on polygons.
    %4. Compute the axis-aligned bounding box of the result of 3. }
\end{figure}
\transboxout
\end{frame}

\begin{frame} \frametitle{Compute Approximate Observation Update Function}
We assume the observation preimages have a specific known shape:\\

 $H(y_k)$ is a planar disk\\

In the rectangle range space, computing approximate transition function $O_{rect}$ :\\
\begin{equation}\label{eq:orect}
	O_{rect}(A_k, y_k) = AABB(H(y_k) \cap A_k)
\end{equation}
\begin{columns}
\column{.7\textwidth}
    \begin{enumerate}
    \item    \small{Compute the set of points at which the boundary of the disk
	$H(y_k)$ intersects the boundary of the rectangle $A_k$}

	\item    \small{Check each of the four extremal points of the disk
	$H(y_k)$: its topmost, bottommost, leftmost, and rightmost points and
	test whether each is contained in $A_k$}

	\item    \small{Find out the smallest axis aligned rectangle that contains the
	8 or fewer points found in above 2 steps}
    \end{enumerate}
\column{.3\textwidth}
    \begin{figure}
    \includegraphics[scale=0.3]{circlerect.jpg}
    \end{figure}
\end{columns}

\transboxout
\end{frame}


\begin{frame}\frametitle{Double-Rectangle approximated I-state}
\begin{itemize}
\item  For better overapproximation quality for non-convex \emph{I-states},
we proposed a more expressive range space of \emph{double rectangles}: \\
\begin{equation}
	\mathcal{R}_{drect} = \{ R_1 \cup R_2 \mid R_1, R_2 \in \mathcal{R}_{rect} \}
\end{equation}
\item The intution is that each $A_k \in \mathcal{R}_{drect}$ is the union of two rectangles\\

\item Correspondingly, we have ``double rectangle around polygon'' (\textbf{DRAP}) algorithm \\
\begin{itemize}
    \item input is a polygonal region of the plane
    \item output is a small double rectangle containing that polygon
\end{itemize}
\item This algorithm keeps the size of the resulting double rectangle as small as possible.\\
     %But does not guarantee to find the smallest polygon that covers the given polygon.
\end{itemize}
\transboxin
\end{frame}

\begin{frame} \frametitle{DRAP Algorithm}

\begin{columns}
\column{.6\textwidth}
    \begin{figure}
    \includegraphics[scale=0.45]{algorithm.jpg}
    \end{figure}
\column{.4\textwidth}
    \begin{figure}
    \includegraphics[scale=0.35]{drap.jpg}
    \caption{\textcolor[rgb]{1.00,0.00,0.00}{Left}: Pseudocode to build a Double-Rectangle given
    a polygon. \textcolor[rgb]{1.00,0.00,0.00}{Above}: An example of the output running DRAP algorithm}
    \end{figure}
\end{columns}

\transboxout
\end{frame}

\begin{frame} \frametitle{Computations for Double Rectangle Range Space}

Based on \textbf{DRAP} Algorithm, we can define the range space operations on
$\mathcal{R}_{drect}$ in a manner similar to those for $\mathcal{R}_{rect}$.  For a double rectangle
approximated \emph{I-state} $A_k = R_1 \cup R_2$, we have
\begin{equation}
	T_{drect}(A_k, u_k) = DRAP(X_{free} \cap [A_k \oplus \{ u_k \} \oplus DRAP(\Theta(u_k))]),
\end{equation}
and
\begin{equation}\label{eq:odrect}
	O_{drect}(A_k, y_k) = AABB(H(y_k) \cap R_1)\cup AABB(H(y_k) \cap R_2).
\end{equation}
Algorithms to evaluate these functions have the same form as the analogous
functions for $\mathcal{R}_{rect}$.

\transboxout
\end{frame}



\section[Experiments]{Experiments}

\begin{frame}\frametitle{Experiments: Task in Various Environments}
To verify the effectiveness and efficiency of CGA for a navigation task,
in comparison with using the true \emph{information state},
we conducted experiments using 3 distinct environments, and 3
distinct range spaces $\mathcal{R}_{disk}$, $\mathcal{R}_{rect}$, and
$\mathcal{R}_{drect}$. \\

\textbf{Assumptions} are:\\

\begin{itemize}
\item A point robot aims to follow the waypoints in order guided
by the centroid point of the approximated \emph{I-state}. \\
\item Robot can detect presence but not distance.
\item Initial \emph{I-state} $\eta_0$ is given.
\item Define plan that uses a feedback on $\mathcal{R}$ as form $\pi: \mathcal{R}\to U$ so that
$u_k = \pi(A_k)$.\\

\end{itemize}
\end{frame}


\begin{frame}\frametitle{Experiments Scenario}
\begin{figure}
    \includegraphics[scale=0.43]{cover.jpg}
    %\caption{A mobile robot navigating through its environment by observing
	%landmarks. The blue circles denote the ranges of where the robot
    %could get observations from the landmarks.
    %The robot represents its knowledge about its own position
	%using a double rectangle approximated information state, and the exact
    %information states are contained within the green region.}
\end{figure}

\transboxout
\end{frame}


\begin{frame}\frametitle{Experiments Results}
For each environment, we measure:\\
\begin{itemize}
	\item the relationship between task completion and number of landmarks,
	\item the time required to compute approximated \emph{I-state} compared to the
	       high-quality polygonal representation of the exact \emph{I-state},
	\item the approximation ratio $Q_k$\\
        \begin{equation}\label{eq:error}
	       Q_k = \frac{1}{k} \sum_{i=1}^k \frac{area(\eta_i)}{area(A_i)}
        \end{equation}
\end{itemize}
\transboxout
\end{frame}


\begin{frame}\frametitle{Comparison of Efficiency and Accuracy}
\begin{columns}
\column{.5\textwidth}
    \begin{figure}
    \includegraphics[scale=0.3]{office.jpg}
    \end{figure}
\column{.5\textwidth}
Comparison of the computation time and approximation ratio for approximated I-states
    to the corresponding computation for the exact \emph{I-states} shows 
    the trade-off between time and accuracy.
    
    \begin{figure}
    \includegraphics[scale=0.25]{tab1.jpg}
    \end{figure}
    
    
\end{columns}
\end{frame}

\begin{frame} \frametitle{Comparison of Success Rate in Office-like Environment}
\begin{figure}
    \includegraphics[scale=0.48]{rate-office.jpg}
    %\caption{For an environment with complex obstacles, $\mathcal{R}_{dblrest}$ shows
    %better performance than using $\mathcal{R}_{disk}$ or $\mathcal{R}_{rect}$ and
    %achieve almost same success rate compared to the true I-states.}
\end{figure}
\end{frame}

\begin{frame} \frametitle{Computation and Approximation ratio in Obstacle-free Environment}
\begin{figure}
    \includegraphics[scale=0.35]{obs_tab.jpg}
    %\caption{For an environment with complex obstacles, $\mathcal{R}_{dblrest}$ shows
    %better performance than using $\mathcal{R}_{disk}$ or $\mathcal{R}_{rect}$ and
    %achieve almost same success rate compared to the true I-states.}
\end{figure}
\end{frame}

\begin{frame} \frametitle{Comparison of Success Rate in Obstacle-free Environment}

\begin{figure}
    \includegraphics[scale=0.48]{rate-obs.jpg}
    %\caption{The success rate is related with the number of landmarks.
    %In the obstacle-free environment, the success rates for a robot to complete the task are
    %nearly identical using $\mathcal{R}_{disk}$, $\mathcal{R}_{rect}$, $\mathcal{R}_{dblrest}$ and true
    %I-states.}
\end{figure}
\end{frame}

\begin{frame} \frametitle{Computation and Approximation ratio in Obstacle-clutter Environment}
\begin{figure}
    \includegraphics[scale=0.4]{clutter_tab.jpg}
    %\caption{For an environment with complex obstacles, $\mathcal{R}_{dblrest}$ shows
    %better performance than using $\mathcal{R}_{disk}$ or $\mathcal{R}_{rect}$ and
    %achieve almost same success rate compared to the true I-states.}
\end{figure}
\end{frame}

\begin{frame} \frametitle{Comparison of Success Rate in Obstacle-clutter Environment}
\begin{figure}
    \includegraphics[scale=0.48]{rate-clutter.jpg}
    %\caption{Using $\mathcal{R}_{rect}$, $\mathcal{R}_{dblrest}$, achieve similar
    %performance to the true	I-state. Using $\mathcal{R}_{disk}$ yields lower success
    %rate due to the high possibility of collisions.}
\end{figure}
\end{frame}



\section[Conclusions]{Conclusions}
\begin{frame} \frametitle{Conclusions and Future Work}
\begin{enumerate}
\item Constrained geometric approximation is an effective method for representing a robot's
uncertain information about the current state.

\item Task completion rates are related with the number of landmarks.

\item The form of double-rectangle is more accurate in approximating the non-convex
\emph{I-state} in 2D space.

\item Additional range spaces, such as $k$-fold union of rectangles,
 will be considered to be used for high-accuracy approximation.

\item There may also be some advantage to
algorithms that also generate provable \textbf{under-approximates} of the I-state.

The discrepancy between the over- and underapproximations could then be used by the robot to estimate
the quality of its representation.
\end{enumerate}
\transboxout
\end{frame}

\begin{frame} \frametitle{}

\begin{figure}
    \includegraphics[scale=0.48]{NSF_logo.jpg}
\end{figure}

\transboxout
\end{frame}


\end{document}
